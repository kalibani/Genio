'use client';
import { Button } from '@/components/ui/button';
import { useFormStepStore } from '@/zustand/useCreateJob';
import {
  UploadCloud,
  Edit,
  MapPin,
  History,
  Banknote,
  Puzzle,
} from 'lucide-react';

import { type FC } from 'react';

type TDetailHeaderJob = {
  title: string;
  description: string;
  experience?: number;
  salaryText?: string;
  workModel?: string;
  location: string;
};

export const HeaderDetailJob: FC<TDetailHeaderJob> = ({
  title,
  description,
  experience,
  salaryText,
  workModel,
  location,
}) => {
  const { handleUploadButtonClick } = useFormStepStore((state) => state);

  return (
    <header className="mt-2 flex w-full flex-col rounded-lg bg-white bg-gradient-to-r from-[#E11D48] to-[#4E3ABA] p-6">
      <section className="flex w-full justify-between">
        <div className="text-white">
          <div className="flex items-center gap-2">
            <h1 className="text-2xl font-medium">{title}</h1>
            <Button
              variant="ghost"
              className="p-0 hover:bg-transparent hover:text-white"
            >
              <Edit />
            </Button>
          </div>
          <div
            dangerouslySetInnerHTML={{ __html: description }}
            className="prose prose-strong:text-white prose-headings:text-white mt-6 h-[120px] overflow-y-auto text-sm text-white"
          />
          {/* Job Requirement */}
          <div className="mt-3 flex items-center gap-3 text-sm">
            <div className="flex items-center gap-1">
              <MapPin className="size-4" />
              {location}
            </div>
            {experience && (
              <div className="flex items-center gap-1">
                <History className="size-4" />
                {experience} years
              </div>
            )}
            {salaryText ? (
              <div className="flex items-center gap-1">
                <Banknote className="size-4" />
                {salaryText}
              </div>
            ) : null}

            {/* don't have data */}
            {/* <div className="flex gap-1 items-center">
              <Gauge className="size-4" />
              Senior Level
            </div>
            <div className="flex gap-1 items-center">
              <UserSearch className="size-4" />
              Full Time
            </div> */}
            {workModel && (
              <div className="flex items-center gap-1 capitalize">
                <Puzzle className="size-4" />
                {workModel.toLowerCase()}
              </div>
            )}
          </div>

          {/* Job Skills Tag */}
          {/* don't have data in DB */}
          {/* <div className="flex items-center gap-3 mt-3">
            {skills.map((skill, idx) => (
              <span key={skill + idx} className="rounded-sm border border-white px-1 text-xs">
                {skill}
              </span>
            ))}
          </div> */}
        </div>

        <div className="flex w-1/4 flex-col items-end gap-4">
          <svg
            width="124"
            height="117"
            viewBox="0 0 124 117"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M28.4368 5.5769C28.4273 2.67782 31.0712 0.188818 33.9493 0.212659C36.947 0.0266988 39.8204 2.58723 39.8395 5.60551C39.8873 7.97054 39.8252 10.3356 39.8539 12.7006C49.7218 9.39624 59.585 6.09663 69.4482 2.76842C70.3614 2.28683 71.4132 2.53001 72.0825 3.29769C77.2173 8.19941 82.2708 13.1774 87.4247 18.0648C88.51 19.09 89.6288 20.1629 90.2312 21.5599C90.9579 23.1144 90.934 24.8739 90.9244 26.557C90.8814 33.2564 90.977 39.9652 90.8766 46.6646C90.8336 48.5528 87.8789 48.9009 87.3769 47.0699C87.1809 39.4646 87.4008 31.845 87.2717 24.2349C87.2287 23.1716 86.5928 22.2513 85.847 21.5409C81.3529 17.1875 76.8587 12.8437 72.3264 8.53796C72.3598 23.4052 72.3455 38.2773 72.3359 53.1493C82.8111 53.1684 93.291 53.135 103.771 53.1637C106.821 53.1446 109.575 55.8815 109.432 58.9475C109.446 68.7986 109.432 78.6497 109.436 88.5009C112.649 88.2863 116.044 88.8346 118.635 90.8611C121.618 93.0688 123.435 96.7499 123.354 100.455C123.344 104.451 123.378 108.446 123.34 112.442C123.387 114.917 121.026 116.991 118.587 116.834C80.9847 116.838 43.3822 116.834 5.78451 116.834C3.3223 117.02 0.907895 114.931 0.974828 112.428C0.93658 109.395 0.970047 106.363 0.960485 103.33C0.893551 98.5427 3.39401 93.8174 7.35745 91.1282C9.7097 89.4688 12.54 88.6487 15.3943 88.4484C15.38 67.8164 15.3895 47.1891 15.3895 26.557C15.2222 23.4005 17.3115 20.3154 20.2996 19.2712C22.9961 18.3414 25.7021 17.4354 28.4129 16.5581C28.4512 12.8961 28.3938 9.23888 28.4368 5.5769ZM32.0321 5.55306C31.9126 8.80974 32.0321 12.076 31.9843 15.3374C33.4139 14.8701 34.8434 14.3933 36.2633 13.8879C36.1677 11.0079 36.3637 8.11359 36.1629 5.23835C35.6418 3.21186 32.1565 3.38352 32.0321 5.55306ZM22.0447 22.4373C20.2279 22.9141 18.8127 24.6593 18.9466 26.5713C18.937 55.4572 18.9561 84.343 18.937 113.229C22.102 113.238 25.267 113.234 28.4368 113.229C28.4225 108.809 28.4177 104.389 28.4321 99.9684C28.3556 98.0421 29.6847 96.1682 31.5493 95.6437C37.1096 94.0558 42.6842 92.53 48.2541 90.9803C50.6493 90.1078 53.4175 92.2248 53.2598 94.7472C53.2741 100.908 53.2693 107.068 53.255 113.234C58.4184 113.234 63.5819 113.238 68.7454 113.229C68.7167 99.4105 68.7502 85.5923 68.731 71.7692C60.9667 74.4013 53.1976 77.0047 45.4189 79.5748C44.2332 80.0802 42.8659 78.8357 43.1432 77.615C43.1814 76.6948 44.0802 76.2418 44.85 76.0177C52.8103 73.3761 60.7516 70.6582 68.7167 68.0309C68.7502 64.9936 68.731 61.9515 68.7263 58.9141C56.4726 63.0482 44.1998 67.125 31.9461 71.259C31.205 71.4402 30.4353 71.9075 29.6608 71.6357C28.5994 71.3639 28.0305 69.9192 28.6855 69.0227C29.0392 68.3599 29.8233 68.2121 30.4592 67.9642C43.2244 63.7252 55.9562 59.4005 68.7167 55.1615C68.7502 52.1194 68.7358 49.0821 68.7263 46.0399C56.1714 50.2646 43.6069 54.4701 31.0425 58.6709C29.9094 59.2622 28.3556 58.3896 28.4273 57.0831C28.3364 56.1152 29.2353 55.4333 30.0863 55.2235C42.9711 50.9321 55.8319 46.574 68.7215 42.2921C68.7454 39.25 68.7358 36.2079 68.7263 33.1658C56.2288 37.3952 43.7073 41.5531 31.205 45.7586C30.3492 46.1305 29.2018 46.0399 28.7046 45.1531C27.887 44.0421 28.8384 42.5448 30.0863 42.3541C42.9711 38.0627 55.8319 33.7094 68.7215 29.4227C68.7454 26.3806 68.7358 23.3433 68.7263 20.3011C56.224 24.5067 43.7169 28.6932 31.2146 32.8892C30.4688 33.1753 29.4982 33.2421 28.9341 32.5745C27.954 31.7067 28.4464 29.9472 29.6942 29.6373C42.6938 25.2553 55.7028 20.8924 68.7215 16.5533C68.7597 13.3014 68.7024 10.0495 68.7597 6.80233C53.1785 11.9854 37.6211 17.2399 22.0447 22.4373ZM72.3311 56.7589C72.3694 71.8884 72.3168 87.018 72.3598 102.147C81.1664 102.1 89.9778 102.128 98.7891 102.133C98.1724 96.9406 100.984 91.5335 105.86 89.4545C105.884 79.2982 105.879 69.1372 105.865 58.9809C105.937 57.8222 104.904 56.7255 103.733 56.7732C93.2671 56.735 82.8015 56.7637 72.3311 56.7589ZM103.972 95.4482C102.447 97.3173 102.308 99.8063 102.365 102.114C108.169 102.138 113.978 102.109 119.787 102.128C119.873 99.8397 119.687 97.3936 118.238 95.5054C115.04 90.8707 107.232 90.8802 103.972 95.4482ZM4.54623 102.119C8.16066 102.124 11.7751 102.124 15.3895 102.119C15.3847 98.7668 15.3895 95.41 15.3847 92.058C9.90572 92.1772 5.12473 96.7165 4.54623 102.119ZM42.6699 96.2206C42.622 101.89 42.6794 107.559 42.6412 113.229C44.9839 113.238 47.3218 113.238 49.6644 113.229C49.6549 106.949 49.6214 100.674 49.6836 94.3992C47.3026 94.8235 45.0173 95.6532 42.6699 96.2206ZM33.17 98.8765C32.6776 99.0386 31.8553 99.2484 31.9987 99.9493C31.9652 104.374 32.0035 108.799 31.9891 113.224C34.3414 113.243 36.6936 113.234 39.0506 113.234C39.0267 107.898 39.0602 102.567 39.0315 97.2362C37.0857 97.8132 35.1207 98.3282 33.17 98.8765ZM4.55101 105.671C4.57491 107.922 4.47929 110.177 4.58448 112.423C4.50798 113.324 5.61239 113.215 6.19089 113.243C9.2555 113.229 12.3249 113.234 15.3895 113.229C15.3847 110.711 15.3895 108.194 15.3847 105.676C11.7751 105.676 8.16544 105.681 4.55101 105.671ZM72.3503 105.676C72.3359 108.194 72.355 110.711 72.3359 113.229C81.1521 113.238 89.973 113.234 98.7939 113.234C98.7796 110.716 98.7939 108.198 98.7796 105.681C89.973 105.671 81.1616 105.681 72.3503 105.676ZM102.404 105.676C102.384 108.189 102.413 110.706 102.384 113.229C107.62 113.243 112.855 113.224 118.09 113.238C118.678 113.205 119.778 113.343 119.73 112.437C119.84 110.182 119.735 107.927 119.763 105.671C113.978 105.676 108.189 105.676 102.404 105.676Z"
              fill="white"
            />
            <path
              d="M78.9863 61.4032C79.7034 61.0695 80.5305 61.1791 81.3003 61.1362C86.7028 61.1648 92.1053 61.1267 97.5126 61.1505C99.0616 61.0075 100.635 62.2329 100.735 63.8064C100.816 65.3847 100.797 66.963 100.754 68.5413C100.821 70.2197 99.1907 71.5834 97.5604 71.4976C91.8041 71.5119 86.0478 71.5214 80.2915 71.4928C78.4747 71.5738 76.9352 69.8621 77.1695 68.074C77.3273 65.8186 76.3663 62.5858 78.9863 61.4032ZM80.7313 64.7648C80.7313 65.7948 80.717 66.8247 80.6883 67.8594C86.2008 67.9691 91.7085 67.8833 97.221 67.9023C97.2162 66.8533 97.2114 65.8091 97.2162 64.7601C91.7228 64.7029 86.2247 64.6933 80.7313 64.7648Z"
              fill="white"
            />
            <path
              d="M79.4643 74.8589C85.4884 74.6634 91.5316 74.8208 97.5604 74.7779C99.1764 74.6158 100.768 75.9604 100.749 77.6007C100.802 79.1885 100.816 80.7811 100.74 82.3689C100.687 83.9662 99.1047 85.1917 97.5508 85.0677C91.8089 85.0772 86.0669 85.082 80.3297 85.0677C78.7711 85.1774 77.246 83.8852 77.1982 82.3164C77.136 80.762 77.1456 79.2076 77.1886 77.6531C77.179 76.3514 78.1783 75.1021 79.4643 74.8589ZM80.7217 78.3302C80.7265 79.3935 80.7265 80.4568 80.7265 81.5201C86.2199 81.5249 91.718 81.5201 97.2114 81.5201C97.2114 80.4521 97.2162 79.3887 97.2209 78.3254C91.7228 78.335 86.2247 78.3207 80.7217 78.3302Z"
              fill="white"
            />
            <path
              d="M35.092 79.2745C36.0386 78.9884 37.2387 78.3685 38.0658 79.2506C39.0076 80.0088 38.7877 81.7492 37.6259 82.1736C35.2928 83.0366 32.9214 83.8138 30.5405 84.5434C28.7811 85.0393 27.6002 82.4024 29.1158 81.4011C31.0281 80.4999 33.1174 80.0326 35.092 79.2745Z"
              fill="white"
            />
            <path
              d="M79.45 88.5869C81.4915 88.3294 83.5665 88.5106 85.6223 88.4677C87.157 88.3485 88.7156 89.3975 88.9642 90.9471C89.1076 92.5445 89.0502 94.1514 89.0216 95.7535C89.0742 97.3413 87.6972 98.8147 86.0908 98.8004C84.1736 98.8385 82.2517 98.8242 80.3345 98.8099C78.8141 98.9291 77.3034 97.6655 77.203 96.1445C77.1265 94.571 77.1456 92.9927 77.1886 91.424C77.1504 90.1032 78.1783 88.8825 79.45 88.5869ZM80.7265 92.0724C80.7265 93.1167 80.7265 94.1561 80.7218 95.2004C82.2947 95.2862 83.8677 95.2862 85.4406 95.2004C85.431 94.1561 85.4358 93.1167 85.4406 92.0772C83.8677 92.0629 82.2947 92.0629 80.7265 92.0724Z"
              fill="white"
            />
          </svg>

          <Button
            variant="secondary"
            className="flex gap-2"
            onClick={handleUploadButtonClick}
          >
            <UploadCloud className="size-4 text-sm" />
            Upload CV
          </Button>
        </div>
      </section>
    </header>
  );
};
